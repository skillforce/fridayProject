{"version":3,"sources":["main/ui/pages/test/test.module.css","main/ui/common/c2-SuperButton/SuperButton.module.css","main/ui/header/header.module.css","main/ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","main/ui/common/c1-SuperInputText/SuperInputText.module.css","main/ui/pages/error404/error404.module.css","main/ui/pages/enterNewPass/enterNewPass.tsx","main/ui/pages/error404/404ErrImg/notfound.gif","main/ui/pages/error404/error404.tsx","main/ui/pages/login/login.tsx","main/ui/pages/profile/profile.tsx","main/ui/pages/recoverPass/recoverPass.tsx","main/ui/pages/registration/registration.tsx","main/ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","main/ui/common/c1-SuperInputText/SuperInputText.tsx","main/ui/common/c2-SuperButton/SuperButton.tsx","main/ui/pages/test/test.tsx","main/ui/routes/Routes.tsx","main/ui/header/header.tsx","main/ui/App.tsx","reportWebVitals.ts","main/bll/store/store.tsx","main/bll/redusers/enterNewPass-reducer.tsx","main/bll/redusers/login-reducer.tsx","main/bll/redusers/test-reducer.tsx","main/bll/redusers/recoverPass-reducer.tsx","main/bll/redusers/registration.tsx","main/bll/redusers/error404-reducer.tsx","index.tsx"],"names":["module","exports","EnterNewPass","err404","s","Error404","className","src","errImg","alt","Login","Profile","RecoverPass","Registration","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","restProps","finalInputClassName","checkbox","e","newCheckedStatus","currentTarget","checked","superInput","errorInput","SuperInputText","onChangeText","onKeyPress","onEnter","error","value","key","placeholder","SuperButton","red","disabled","addUser","finalClassName","default","isDisabledClass","disableClass","onClick","test_component","bth_group","input_group","checkbox_group","Test","useState","setChecked","text","setText","alert","PATH","Routes","path","exact","render","to","header_tittle","header_nav","header_nav_active","Header","activeClassName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","enterNewPass","state","login","test","recoverPass","registration","error404","store","createStore","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,eAAiB,+B,mBCAnCD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,yBAAyB,aAAe,oC,mBCAvGD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,WAAa,2BAA2B,kBAAoB,oC,mBCA5HD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,qC,mBCA/ED,EAAOC,QAAU,CAAC,OAAS,2B,kJCUZC,EARM,WACjB,OACI,gDCLO,MAA0B,qC,QCInCC,E,OAAQC,EAARD,OAUSE,EARE,WACb,OACI,qBAAKC,UAAWH,EAAhB,SACI,qBAAKI,IAAKC,EAAQC,IAAI,gBCEnBC,EARD,WACV,OACI,yCCMOC,EARC,WACZ,OACI,2CCMOC,EARK,WAChB,OACI,+CCMOC,EARM,WACjB,OACI,gD,yCCuCOC,EAjCyC,SAAC,GASpD,EAPGC,KAOH,EANGC,SAMF,IANYC,EAMb,EANaA,gBACVX,EAKH,EALGA,UACAY,GAIH,EALcC,cAKd,EAJGD,UAEGE,EAEN,4FAQKC,EAAmB,UAAMjB,IAAEkB,SAAR,YAAoBhB,GAAwB,IAErE,OACI,kCACI,mCACIS,KAAM,WACNC,SAba,SAACO,GACtB,IAAIC,EAAmBD,EAAEE,cAAcC,QACnCT,GACAA,EAAgBO,IAWZlB,UAAWe,GAEPD,IAEPF,GAAY,sBAAMZ,UAAWF,IAAEe,cAAnB,SAAmCD,Q,iBCxBrDS,EAA0BvB,IAA1BuB,WAAYC,EAAcxB,IAAdwB,WA2CJC,EAzC2C,SAAC,GAStD,EAPGd,KAOF,IANEC,EAMH,EANGA,SAAUc,EAMb,EANaA,aACVC,EAKH,EALGA,WAAYC,EAKf,EALeA,QACZC,EAIH,EAJGA,MAEGb,GAEN,EAHGd,UAGH,EAHca,cAGd,8GAgBKE,EAAsBD,EAAUc,MAAQP,EAAaC,EAG3D,OACI,mCACIb,KAAM,OACNC,SArBiB,SAACO,GACtBP,GACGA,EAASO,GAEZO,GAAgBA,EAAaP,EAAEE,cAAcS,QAkBzCH,WAhBmB,SAACR,GACxBQ,GAAcA,EAAWR,GAEzBS,GACa,UAAVT,EAAEY,KACFH,EAAQT,IAYPjB,UAAWe,EACXe,YAAaH,GACTb,K,iBCpBDiB,EAnBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKhC,EAGR,EAHQA,UAAWiC,EAGnB,EAHmBA,SAAUC,EAG7B,EAH6BA,QACvBpB,EAEN,wDACKqB,EAAc,UAAMH,EAAMlC,IAAEkC,IAAMlC,IAAEsC,QAAtB,YAAiCpC,GAC/CqC,EAAe,UAAMJ,EAAWnC,IAAEwC,aAAeH,GAEvD,OACI,oCACII,QAASL,EACTD,SAAUA,EACVjC,UAAWqC,GACPvB,K,iBCrBT0B,EAA0D1C,IAA1D0C,eAAgBC,EAA0C3C,IAA1C2C,UAAWC,EAA+B5C,IAA/B4C,YAAaC,EAAkB7C,IAAlB6C,eA4DhCC,EAzDF,WAAO,IAAD,EAEeC,oBAAkB,GAFjC,mBAERzB,EAFQ,KAEC0B,EAFD,OAGSD,mBAAiB,IAH1B,mBAGRE,EAHQ,KAGFC,EAHE,KAITrB,EAAQoB,EAAO,GAAK,iBAU1B,OACI,sBAAK/C,UAAWwC,EAAhB,UACI,sBAAKxC,UAAWyC,EAAhB,UACI,uDACA,cAAC,EAAD,CACIrB,QAASA,EACTT,gBAAiBmC,IACrB,kEACA,cAAC,EAAD,CAAe1B,SAAO,IACtB,oEACA,cAAC,EAAD,CAAeA,SAAS,OAE5B,sBAAKpB,UAAW0C,EAAhB,UACI,oDACA,cAAC,EAAD,CACId,MAAOmB,EACPvB,aAAcwB,EACdrB,MAAOA,IACX,kEACA,cAAC,EAAD,CACIG,YAAa,iBACbF,MAAO,GACPD,MAAOA,IACX,qEACA,cAAC,EAAD,CACIC,MAAO,iBAGf,sBAAK5B,UAAW2C,EAAhB,UACI,oDACA,cAAC,EAAD,CAAaJ,QAtCP,WACVZ,EACAsB,MAAM,+BAENA,MAAM,qBAAD,OAAsBF,KAkCvB,+BAEA,gDACA,cAAC,EAAD,CAAaf,KAAG,EAAhB,0BAEA,gDACA,cAAC,EAAD,CAAaC,UAAQ,EAArB,oCClDHiB,EACO,eADPA,EAEE,UAFFA,EAGF,SAHEA,EAIA,WAJAA,EAKK,eALLA,EAMK,OANLA,EAOH,QAIGC,EAAS,WAClB,OACI,8BACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUC,GAAIL,OAGpD,cAAC,IAAD,CAAOE,KAAMF,EAAqBI,OAAQ,kBAAM,cAAC,EAAD,OAChD,cAAC,IAAD,CAAOF,KAAMF,EAAgBI,OAAQ,kBAAM,cAAC,EAAD,OAC3C,cAAC,IAAD,CAAOF,KAAMF,EAAYI,OAAQ,kBAAM,cAAC,EAAD,OACvC,cAAC,IAAD,CAAOF,KAAMF,EAAcI,OAAQ,kBAAM,cAAC,EAAD,OACzC,cAAC,IAAD,CAAOF,KAAMF,EAAmBI,OAAQ,kBAAM,cAAC,EAAD,OAC9C,cAAC,IAAD,CAAOF,KAAMF,EAAmBI,OAAQ,kBAAM,cAAC,EAAD,OAC9C,cAAC,IAAD,CAAOF,KAAMF,EAAWI,OAAQ,kBAAM,cAAC,EAAD,a,wBC7BhDE,EAA4C1D,IAA5C0D,cAAcC,EAA8B3D,IAA9B2D,WAAWC,EAAmB5D,IAAnB4D,kBAiBhBC,EAfA,WACX,OACI,sBAAK3D,UAAWwD,EAAhB,UACI,cAAC,IAAD,CAASD,GAAIL,EAAqBlD,UAAWyD,EAAYG,gBAAiBF,EAA1E,4BACA,cAAC,IAAD,CAASH,GAAIL,EAAgBlD,UAAWyD,EAAYG,gBAAiBF,EAArE,sBACA,cAAC,IAAD,CAASH,GAAIL,EAAYlD,UAAWyD,EAAYG,gBAAiBF,EAAjE,mBACA,cAAC,IAAD,CAASH,GAAIL,EAAclD,UAAWyD,EAAYG,gBAAiBF,EAAnE,qBACA,cAAC,IAAD,CAASH,GAAIL,EAAmBlD,UAAWyD,EAAYG,gBAAiBF,EAAxE,0BACA,cAAC,IAAD,CAASH,GAAIL,EAAmBlD,UAAWyD,EAAYG,gBAAiBF,EAAxE,0BACA,cAAC,IAAD,CAASH,GAAIL,EAAWlD,UAAWyD,EAAYG,gBAAiBF,EAAhE,sBCFGG,GATH,WACR,OACI,sBAAK7D,UAAU,MAAf,UACD,cAAC,EAAD,IACK,cAAC,EAAD,QCKG8D,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kBCARQ,GAAWC,aAAgB,CAC9BC,aCJgC,WAAiC,IAAhCC,EAA+B,uDAApB,GAEnC,OAAOA,GDGhBC,MERyB,WAAiC,IAAhCD,EAA+B,uDAApB,GAEpC,OAAOA,GFORE,KGTwB,WAAiC,IAAhCF,EAA+B,uDAApB,GAEnC,OAAOA,GHQRG,YIV+B,WAAiC,IAAhCH,EAA+B,uDAApB,GAE1C,OAAOA,GJSRI,aKXgC,WAAiC,IAAhCJ,EAA+B,uDAApB,GAE3C,OAAOA,GLURK,SMZ4B,WAAiC,IAAhCL,EAA+B,uDAApB,GAEvC,OAAOA,KNcLM,GAAQC,aAAYV,IAQXS,MAKfE,OAAOF,MAAQA,GOvBfG,IAAS7B,OACL,cAAC,IAAD,UACF,cAAC,IAAM8B,WAAP,UACE,cAAC,KAAD,CAAUJ,MAAOA,GAAjB,SACA,cAAC,GAAD,UAIFK,SAASC,eAAe,SAI1BxB,O","file":"static/js/main.f368d3e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"test_component\":\"test_test_component__hXlio\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__HO61J\",\"red\":\"SuperButton_red__1C2W2\",\"disableClass\":\"SuperButton_disableClass__2VWRR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_tittle\":\"header_header_tittle__1q0Br\",\"header_nav\":\"header_header_nav__24qu2\",\"header_nav_active\":\"header_header_nav_active__1_DUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1Ml_a\",\"spanClassName\":\"SuperCheckbox_spanClassName__3CsxZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__BXG1H\",\"errorInput\":\"SuperInputText_errorInput__2vQeS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"err404\":\"error404_err404__2acUt\"};","import React from 'react';\r\n\r\n\r\nconst EnterNewPass = () => {\r\n    return (\r\n        <div>\r\n            EnterNewPass\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EnterNewPass;\r\n","export default __webpack_public_path__ + \"static/media/notfound.52f5b072.gif\";","import React from 'react';\r\nimport errImg from './404ErrImg/notfound.gif';\r\nimport s from './error404.module.css';\r\n\r\nconst{err404}=s;\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <div className={err404}>\r\n            <img src={errImg} alt=\"ErrorImg\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React from 'react';\r\n\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div>\r\n            Login\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\n\r\n\r\nconst RecoverPass = () => {\r\n    return (\r\n        <div>\r\n            RecoverPass\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecoverPass;\r\n","import React from 'react';\r\n\r\n\r\nconst Registration = () => {\r\n    return (\r\n        <div>\r\n            Registration\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Registration;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newCheckedStatus = e.currentTarget.checked;\r\n        if (onChangeChecked) {\r\n            onChangeChecked(newCheckedStatus);\r\n        }\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: (e: React.KeyboardEvent<HTMLInputElement>) => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst {superInput, errorInput} = s;\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter(e) // то вызвать его\r\n    }\r\n\r\n\r\n    const finalInputClassName = restProps.value ? superInput : errorInput;\r\n\r\n\r\n    return (\r\n        <input\r\n            type={'text'}\r\n            onChange={onChangeCallback}\r\n            onKeyPress={onKeyPressCallback}\r\n            className={finalInputClassName}\r\n            placeholder={error}\r\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    disabled?: boolean\r\n    addUser?: () => void\r\n    filter?: string\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className, disabled, addUser,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n    const isDisabledClass = `${disabled ? s.disableClass : finalClassName}`\r\n\r\n    return (\r\n        <button\r\n            onClick={addUser}\r\n            disabled={disabled}\r\n            className={isDisabledClass}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {useState} from 'react';\r\nimport SuperCheckbox from '../../common/c3-SuperCheckbox/SuperCheckbox';\r\nimport SuperInputText from '../../common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../../common/c2-SuperButton/SuperButton';\r\nimport s from './test.module.css';\r\n\r\nconst {test_component, bth_group, input_group, checkbox_group} = s;\r\n\r\n\r\nconst Test = () => {\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)//Делает чекбокс управляемым\r\n    const [text, setText] = useState<string>('')//Делает input управляемым\r\n    const error = text ? '' : 'Enter the text'//Для подсветки пустого инпута\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('Enter text in control input')\r\n        } else {\r\n            alert(`You was entered : ${text}`) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={test_component}>\r\n            <div className={bth_group}>\r\n                <span>Controlled CheckBox</span>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}/>\r\n                <span>Uncontrolled CheckBox(checked)</span>\r\n                <SuperCheckbox checked/>\r\n                <span>Uncontrolled CheckBox(Unchecked)</span>\r\n                <SuperCheckbox checked={false}/>\r\n            </div>\r\n            <div className={input_group}>\r\n                <span>Controlled input</span>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    error={error}/>\r\n                <span>Uncontrolled input(with error)</span>\r\n                <SuperInputText\r\n                    placeholder={'withOutAnyText'}\r\n                    value={''}\r\n                    error={error}/>\r\n                <span>Uncontrolled input(without error)</span>\r\n                <SuperInputText\r\n                    value={'some text'}\r\n                />\r\n            </div>\r\n            <div className={checkbox_group}>\r\n                <span>Btn with out err</span>\r\n                <SuperButton onClick={showAlert}>testOnBTN(click!)</SuperButton>\r\n\r\n                <span>Btn with err</span>\r\n                <SuperButton red>testErrorBTN</SuperButton>\r\n\r\n                <span>disabled btn</span>\r\n                <SuperButton disabled>testDisabledBTN</SuperButton>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Test;\r\n","import {Redirect, Route, Switch} from 'react-router-dom';\r\nimport EnterNewPass from '../pages/enterNewPass/enterNewPass';\r\nimport Error404 from '../pages/error404/error404';\r\nimport Login from '../pages/login/login';\r\nimport Profile from '../pages/profile/profile';\r\nimport RecoverPass from '../pages/recoverPass/recoverPass';\r\nimport Registration from '../pages/registration/registration';\r\nimport Test from '../pages/test/test';\r\n\r\nexport const PATH = {\r\n    ENTER_NEW_PASS: '/newPassword',\r\n    ERROR_404: '/err404',\r\n    LOGIN: '/login',\r\n    PROFILE: '/profile',\r\n    RECOVER_PASS: '/recPassword',\r\n    REGISTRATION: '/reg',\r\n    TEST: '/test',\r\n}\r\n\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n\r\n\r\n                <Route path={PATH.ENTER_NEW_PASS} render={() => <EnterNewPass/>}/>\r\n                <Route path={PATH.ERROR_404} render={() => <Error404/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.RECOVER_PASS} render={() => <RecoverPass/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n\r\n\r\n}","import React from 'react';\r\nimport {PATH} from '../routes/Routes';\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './header.module.css';\r\n\r\nconst{header_tittle,header_nav,header_nav_active}=s;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={header_tittle}>\r\n            <NavLink to={PATH.ENTER_NEW_PASS} className={header_nav} activeClassName={header_nav_active}>enter new pass</NavLink>\r\n            <NavLink to={PATH.ERROR_404} className={header_nav} activeClassName={header_nav_active}>error404</NavLink>\r\n            <NavLink to={PATH.LOGIN} className={header_nav} activeClassName={header_nav_active}>login</NavLink>\r\n            <NavLink to={PATH.PROFILE} className={header_nav} activeClassName={header_nav_active}>profile</NavLink>\r\n            <NavLink to={PATH.RECOVER_PASS} className={header_nav} activeClassName={header_nav_active}>recover pass</NavLink>\r\n            <NavLink to={PATH.REGISTRATION} className={header_nav} activeClassName={header_nav_active}>registration</NavLink>\r\n            <NavLink to={PATH.TEST} className={header_nav} activeClassName={header_nav_active}>test</NavLink>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport './App.css';\nimport Header from './header/header';\nimport {Routes} from './routes/Routes';\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n       <Header/>\n            <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from 'redux';\r\nimport {EnterNewPassReducer} from '../redusers/enterNewPass-reducer';\r\nimport {LoginReducer} from '../redusers/login-reducer';\r\nimport {TestReducer} from '../redusers/test-reducer';\r\nimport {RecoverPassReducer} from '../redusers/recoverPass-reducer';\r\nimport {RegistrationReducer} from '../redusers/registration';\r\nimport {Error404Reducer} from '../redusers/error404-reducer';\r\n\r\n\r\nconst reducers = combineReducers({\r\n   enterNewPass:EnterNewPassReducer,\r\n   login: LoginReducer,\r\n   test: TestReducer,\r\n   recoverPass: RecoverPassReducer,\r\n   registration:RegistrationReducer,\r\n   error404:Error404Reducer\r\n})\r\n\r\n\r\nconst store = createStore(reducers)\r\n\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n\r\n\r\n\r\nexport default store\r\n\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store","\r\n\r\n\r\n\r\n\r\n\r\nexport const EnterNewPassReducer = (state: any={}, action: any) => {\r\n\r\n            return state\r\n    }\r\n","\r\n\r\n\r\nexport const LoginReducer = (state: any={}, action: any) => {\r\n\r\n    return state\r\n}\r\n","\r\n\r\n\r\nexport const TestReducer = (state: any={}, action: any) => {\r\n\r\n    return state\r\n}\r\n","\r\n\r\n\r\nexport const RecoverPassReducer = (state: any={}, action: any) => {\r\n\r\n    return state\r\n}\r\n","\r\n\r\n\r\nexport const RegistrationReducer = (state: any={}, action: any) => {\r\n\r\n    return state\r\n}\r\n","\r\n\r\n\r\nexport const Error404Reducer = (state: any={}, action: any) => {\r\n\r\n    return state\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './main/bll/store/store';\n\nReactDOM.render(\n    <HashRouter>\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n   </Provider>\n  </React.StrictMode>\n    </HashRouter>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}